#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GreenPlanet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_Green_Planet")]
	public partial class GreenClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertAreaCobertura(AreaCobertura instance);
    partial void UpdateAreaCobertura(AreaCobertura instance);
    partial void DeleteAreaCobertura(AreaCobertura instance);
    partial void InsertCanton(Canton instance);
    partial void UpdateCanton(Canton instance);
    partial void DeleteCanton(Canton instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertColaboradore(Colaboradore instance);
    partial void UpdateColaboradore(Colaboradore instance);
    partial void DeleteColaboradore(Colaboradore instance);
    partial void InsertComercioAfiliado(ComercioAfiliado instance);
    partial void UpdateComercioAfiliado(ComercioAfiliado instance);
    partial void DeleteComercioAfiliado(ComercioAfiliado instance);
    partial void InsertCuentasXcobrar(CuentasXcobrar instance);
    partial void UpdateCuentasXcobrar(CuentasXcobrar instance);
    partial void DeleteCuentasXcobrar(CuentasXcobrar instance);
    partial void InsertCupone(Cupone instance);
    partial void UpdateCupone(Cupone instance);
    partial void DeleteCupone(Cupone instance);
    partial void InsertDetalleCupon(DetalleCupon instance);
    partial void UpdateDetalleCupon(DetalleCupon instance);
    partial void DeleteDetalleCupon(DetalleCupon instance);
    partial void InsertDireccione(Direccione instance);
    partial void UpdateDireccione(Direccione instance);
    partial void DeleteDireccione(Direccione instance);
    partial void InsertDireccionXrecoleccion(DireccionXrecoleccion instance);
    partial void UpdateDireccionXrecoleccion(DireccionXrecoleccion instance);
    partial void DeleteDireccionXrecoleccion(DireccionXrecoleccion instance);
    partial void InsertDistrito(Distrito instance);
    partial void UpdateDistrito(Distrito instance);
    partial void DeleteDistrito(Distrito instance);
    partial void InsertEstadosCupon(EstadosCupon instance);
    partial void UpdateEstadosCupon(EstadosCupon instance);
    partial void DeleteEstadosCupon(EstadosCupon instance);
    partial void InsertEstadosRecoleccion(EstadosRecoleccion instance);
    partial void UpdateEstadosRecoleccion(EstadosRecoleccion instance);
    partial void DeleteEstadosRecoleccion(EstadosRecoleccion instance);
    partial void InsertInventarioMaterial(InventarioMaterial instance);
    partial void UpdateInventarioMaterial(InventarioMaterial instance);
    partial void DeleteInventarioMaterial(InventarioMaterial instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMaterialesXrecoleccion(MaterialesXrecoleccion instance);
    partial void UpdateMaterialesXrecoleccion(MaterialesXrecoleccion instance);
    partial void DeleteMaterialesXrecoleccion(MaterialesXrecoleccion instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertProvincia(Provincia instance);
    partial void UpdateProvincia(Provincia instance);
    partial void DeleteProvincia(Provincia instance);
    partial void InsertRecoleccion(Recoleccion instance);
    partial void UpdateRecoleccion(Recoleccion instance);
    partial void DeleteRecoleccion(Recoleccion instance);
    #endregion
		
		public GreenClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_Green_PlanetConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GreenClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GreenClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GreenClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GreenClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<AreaCobertura> AreaCoberturas
		{
			get
			{
				return this.GetTable<AreaCobertura>();
			}
		}
		
		public System.Data.Linq.Table<Canton> Cantons
		{
			get
			{
				return this.GetTable<Canton>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Colaboradore> Colaboradores
		{
			get
			{
				return this.GetTable<Colaboradore>();
			}
		}
		
		public System.Data.Linq.Table<ComercioAfiliado> ComercioAfiliados
		{
			get
			{
				return this.GetTable<ComercioAfiliado>();
			}
		}
		
		public System.Data.Linq.Table<CuentasXcobrar> CuentasXcobrars
		{
			get
			{
				return this.GetTable<CuentasXcobrar>();
			}
		}
		
		public System.Data.Linq.Table<Cupone> Cupones
		{
			get
			{
				return this.GetTable<Cupone>();
			}
		}
		
		public System.Data.Linq.Table<DetalleCupon> DetalleCupons
		{
			get
			{
				return this.GetTable<DetalleCupon>();
			}
		}
		
		public System.Data.Linq.Table<Direccione> Direcciones
		{
			get
			{
				return this.GetTable<Direccione>();
			}
		}
		
		public System.Data.Linq.Table<DireccionXrecoleccion> DireccionXrecoleccions
		{
			get
			{
				return this.GetTable<DireccionXrecoleccion>();
			}
		}
		
		public System.Data.Linq.Table<Distrito> Distritos
		{
			get
			{
				return this.GetTable<Distrito>();
			}
		}
		
		public System.Data.Linq.Table<EstadosCupon> EstadosCupons
		{
			get
			{
				return this.GetTable<EstadosCupon>();
			}
		}
		
		public System.Data.Linq.Table<EstadosRecoleccion> EstadosRecoleccions
		{
			get
			{
				return this.GetTable<EstadosRecoleccion>();
			}
		}
		
		public System.Data.Linq.Table<InventarioMaterial> InventarioMaterials
		{
			get
			{
				return this.GetTable<InventarioMaterial>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<MaterialesXrecoleccion> MaterialesXrecoleccions
		{
			get
			{
				return this.GetTable<MaterialesXrecoleccion>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Personas
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Provincia> Provincias
		{
			get
			{
				return this.GetTable<Provincia>();
			}
		}
		
		public System.Data.Linq.Table<Recoleccion> Recoleccions
		{
			get
			{
				return this.GetTable<Recoleccion>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_crearDetalleCupon")]
		public int SP_crearDetalleCupon([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> idComercio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DescCupon", DbType="VarChar(100)")] string descCupon, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> cantHojas, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string imagen)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idComercio, descCupon, cantHojas, imagen);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAgenda;
		
		private int _idColaborador;
		
		private int _idRecoleccion;
		
		private EntityRef<Colaboradore> _Colaboradore;
		
		private EntityRef<Recoleccion> _Recoleccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAgendaChanging(int value);
    partial void OnidAgendaChanged();
    partial void OnidColaboradorChanging(int value);
    partial void OnidColaboradorChanged();
    partial void OnidRecoleccionChanging(int value);
    partial void OnidRecoleccionChanged();
    #endregion
		
		public Agenda()
		{
			this._Colaboradore = default(EntityRef<Colaboradore>);
			this._Recoleccion = default(EntityRef<Recoleccion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAgenda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAgenda
		{
			get
			{
				return this._idAgenda;
			}
			set
			{
				if ((this._idAgenda != value))
				{
					this.OnidAgendaChanging(value);
					this.SendPropertyChanging();
					this._idAgenda = value;
					this.SendPropertyChanged("idAgenda");
					this.OnidAgendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idColaborador", DbType="Int NOT NULL")]
		public int idColaborador
		{
			get
			{
				return this._idColaborador;
			}
			set
			{
				if ((this._idColaborador != value))
				{
					if (this._Colaboradore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidColaboradorChanging(value);
					this.SendPropertyChanging();
					this._idColaborador = value;
					this.SendPropertyChanged("idColaborador");
					this.OnidColaboradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecoleccion", DbType="Int NOT NULL")]
		public int idRecoleccion
		{
			get
			{
				return this._idRecoleccion;
			}
			set
			{
				if ((this._idRecoleccion != value))
				{
					if (this._Recoleccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idRecoleccion = value;
					this.SendPropertyChanged("idRecoleccion");
					this.OnidRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradore_Agenda", Storage="_Colaboradore", ThisKey="idColaborador", OtherKey="idColaborador", IsForeignKey=true)]
		public Colaboradore Colaboradore
		{
			get
			{
				return this._Colaboradore.Entity;
			}
			set
			{
				Colaboradore previousValue = this._Colaboradore.Entity;
				if (((previousValue != value) 
							|| (this._Colaboradore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Colaboradore.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Colaboradore.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._idColaborador = value.idColaborador;
					}
					else
					{
						this._idColaborador = default(int);
					}
					this.SendPropertyChanged("Colaboradore");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_Agenda", Storage="_Recoleccion", ThisKey="idRecoleccion", OtherKey="idRecoleccion", IsForeignKey=true)]
		public Recoleccion Recoleccion
		{
			get
			{
				return this._Recoleccion.Entity;
			}
			set
			{
				Recoleccion previousValue = this._Recoleccion.Entity;
				if (((previousValue != value) 
							|| (this._Recoleccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recoleccion.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Recoleccion.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._idRecoleccion = value.idRecoleccion;
					}
					else
					{
						this._idRecoleccion = default(int);
					}
					this.SendPropertyChanged("Recoleccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _descripcionRoles;
		
		private byte _idRoles;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Colaboradore> _Colaboradores;
		
		private EntitySet<ComercioAfiliado> _ComercioAfiliados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndescripcionRolesChanging(string value);
    partial void OndescripcionRolesChanged();
    partial void OnidRolesChanging(byte value);
    partial void OnidRolesChanged();
    #endregion
		
		public Role()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Colaboradores = new EntitySet<Colaboradore>(new Action<Colaboradore>(this.attach_Colaboradores), new Action<Colaboradore>(this.detach_Colaboradores));
			this._ComercioAfiliados = new EntitySet<ComercioAfiliado>(new Action<ComercioAfiliado>(this.attach_ComercioAfiliados), new Action<ComercioAfiliado>(this.detach_ComercioAfiliados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcionRoles", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string descripcionRoles
		{
			get
			{
				return this._descripcionRoles;
			}
			set
			{
				if ((this._descripcionRoles != value))
				{
					this.OndescripcionRolesChanging(value);
					this.SendPropertyChanging();
					this._descripcionRoles = value;
					this.SendPropertyChanged("descripcionRoles");
					this.OndescripcionRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoles", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idRoles
		{
			get
			{
				return this._idRoles;
			}
			set
			{
				if ((this._idRoles != value))
				{
					this.OnidRolesChanging(value);
					this.SendPropertyChanging();
					this._idRoles = value;
					this.SendPropertyChanged("idRoles");
					this.OnidRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Cliente", Storage="_Clientes", ThisKey="idRoles", OtherKey="idRoles")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Colaboradore", Storage="_Colaboradores", ThisKey="idRoles", OtherKey="idRoles")]
		public EntitySet<Colaboradore> Colaboradores
		{
			get
			{
				return this._Colaboradores;
			}
			set
			{
				this._Colaboradores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_ComercioAfiliado", Storage="_ComercioAfiliados", ThisKey="idRoles", OtherKey="idRoles")]
		public EntitySet<ComercioAfiliado> ComercioAfiliados
		{
			get
			{
				return this._ComercioAfiliados;
			}
			set
			{
				this._ComercioAfiliados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Colaboradores(Colaboradore entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Colaboradores(Colaboradore entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_ComercioAfiliados(ComercioAfiliado entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_ComercioAfiliados(ComercioAfiliado entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreaCobertura")]
	public partial class AreaCobertura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAreaCobertura;
		
		private byte _idProvincia;
		
		private int _idColaborador;
		
		private EntityRef<Colaboradore> _Colaboradore;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAreaCoberturaChanging(int value);
    partial void OnidAreaCoberturaChanged();
    partial void OnidProvinciaChanging(byte value);
    partial void OnidProvinciaChanged();
    partial void OnidColaboradorChanging(int value);
    partial void OnidColaboradorChanged();
    #endregion
		
		public AreaCobertura()
		{
			this._Colaboradore = default(EntityRef<Colaboradore>);
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAreaCobertura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAreaCobertura
		{
			get
			{
				return this._idAreaCobertura;
			}
			set
			{
				if ((this._idAreaCobertura != value))
				{
					this.OnidAreaCoberturaChanging(value);
					this.SendPropertyChanging();
					this._idAreaCobertura = value;
					this.SendPropertyChanged("idAreaCobertura");
					this.OnidAreaCoberturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="TinyInt NOT NULL")]
		public byte idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idColaborador", DbType="Int NOT NULL")]
		public int idColaborador
		{
			get
			{
				return this._idColaborador;
			}
			set
			{
				if ((this._idColaborador != value))
				{
					if (this._Colaboradore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidColaboradorChanging(value);
					this.SendPropertyChanging();
					this._idColaborador = value;
					this.SendPropertyChanged("idColaborador");
					this.OnidColaboradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradore_AreaCobertura", Storage="_Colaboradore", ThisKey="idColaborador", OtherKey="idColaborador", IsForeignKey=true)]
		public Colaboradore Colaboradore
		{
			get
			{
				return this._Colaboradore.Entity;
			}
			set
			{
				Colaboradore previousValue = this._Colaboradore.Entity;
				if (((previousValue != value) 
							|| (this._Colaboradore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Colaboradore.Entity = null;
						previousValue.AreaCoberturas.Remove(this);
					}
					this._Colaboradore.Entity = value;
					if ((value != null))
					{
						value.AreaCoberturas.Add(this);
						this._idColaborador = value.idColaborador;
					}
					else
					{
						this._idColaborador = default(int);
					}
					this.SendPropertyChanged("Colaboradore");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_AreaCobertura", Storage="_Provincia", ThisKey="idProvincia", OtherKey="idProvincia", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.AreaCoberturas.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.AreaCoberturas.Add(this);
						this._idProvincia = value.idProvincia;
					}
					else
					{
						this._idProvincia = default(byte);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Canton")]
	public partial class Canton : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idCanton;
		
		private string _nombreCanton;
		
		private byte _idProvincia;
		
		private EntitySet<Distrito> _Distritos;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCantonChanging(byte value);
    partial void OnidCantonChanged();
    partial void OnnombreCantonChanging(string value);
    partial void OnnombreCantonChanged();
    partial void OnidProvinciaChanging(byte value);
    partial void OnidProvinciaChanged();
    #endregion
		
		public Canton()
		{
			this._Distritos = new EntitySet<Distrito>(new Action<Distrito>(this.attach_Distritos), new Action<Distrito>(this.detach_Distritos));
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCanton", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idCanton
		{
			get
			{
				return this._idCanton;
			}
			set
			{
				if ((this._idCanton != value))
				{
					this.OnidCantonChanging(value);
					this.SendPropertyChanging();
					this._idCanton = value;
					this.SendPropertyChanged("idCanton");
					this.OnidCantonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreCanton", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreCanton
		{
			get
			{
				return this._nombreCanton;
			}
			set
			{
				if ((this._nombreCanton != value))
				{
					this.OnnombreCantonChanging(value);
					this.SendPropertyChanging();
					this._nombreCanton = value;
					this.SendPropertyChanged("nombreCanton");
					this.OnnombreCantonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="TinyInt NOT NULL")]
		public byte idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Canton_Distrito", Storage="_Distritos", ThisKey="idCanton", OtherKey="idCanton")]
		public EntitySet<Distrito> Distritos
		{
			get
			{
				return this._Distritos;
			}
			set
			{
				this._Distritos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Canton", Storage="_Provincia", ThisKey="idProvincia", OtherKey="idProvincia", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Cantons.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Cantons.Add(this);
						this._idProvincia = value.idProvincia;
					}
					else
					{
						this._idProvincia = default(byte);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Distritos(Distrito entity)
		{
			this.SendPropertyChanging();
			entity.Canton = this;
		}
		
		private void detach_Distritos(Distrito entity)
		{
			this.SendPropertyChanging();
			entity.Canton = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCliente;
		
		private string _idPersona;
		
		private int _idDireccion;
		
		private byte _idRoles;
		
		private string _nombreUsuario;
		
		private string _contrasena;
		
		private string _correo;
		
		private string _tel;
		
		private bool _estado;
		
		private short _hojas;
		
		private EntitySet<Cupone> _Cupones;
		
		private EntitySet<Recoleccion> _Recoleccions;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Direccione> _Direccione;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnidPersonaChanging(string value);
    partial void OnidPersonaChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnidRolesChanging(byte value);
    partial void OnidRolesChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    partial void OnhojasChanging(short value);
    partial void OnhojasChanged();
    #endregion
		
		public Cliente()
		{
			this._Cupones = new EntitySet<Cupone>(new Action<Cupone>(this.attach_Cupones), new Action<Cupone>(this.detach_Cupones));
			this._Recoleccions = new EntitySet<Recoleccion>(new Action<Recoleccion>(this.attach_Recoleccions), new Action<Recoleccion>(this.detach_Recoleccions));
			this._Role = default(EntityRef<Role>);
			this._Direccione = default(EntityRef<Direccione>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoles", DbType="TinyInt NOT NULL")]
		public byte idRoles
		{
			get
			{
				return this._idRoles;
			}
			set
			{
				if ((this._idRoles != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolesChanging(value);
					this.SendPropertyChanging();
					this._idRoles = value;
					this.SendPropertyChanged("idRoles");
					this.OnidRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(150)")]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(8)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hojas", DbType="SmallInt NOT NULL")]
		public short hojas
		{
			get
			{
				return this._hojas;
			}
			set
			{
				if ((this._hojas != value))
				{
					this.OnhojasChanging(value);
					this.SendPropertyChanging();
					this._hojas = value;
					this.SendPropertyChanged("hojas");
					this.OnhojasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Cupone", Storage="_Cupones", ThisKey="idCliente", OtherKey="idCliente")]
		public EntitySet<Cupone> Cupones
		{
			get
			{
				return this._Cupones;
			}
			set
			{
				this._Cupones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Recoleccion", Storage="_Recoleccions", ThisKey="idCliente", OtherKey="idCliente")]
		public EntitySet<Recoleccion> Recoleccions
		{
			get
			{
				return this._Recoleccions;
			}
			set
			{
				this._Recoleccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Cliente", Storage="_Role", ThisKey="idRoles", OtherKey="idRoles", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._idRoles = value.idRoles;
					}
					else
					{
						this._idRoles = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direccione_Cliente", Storage="_Direccione", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccione Direccione
		{
			get
			{
				return this._Direccione.Entity;
			}
			set
			{
				Direccione previousValue = this._Direccione.Entity;
				if (((previousValue != value) 
							|| (this._Direccione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccione.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Direccione.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cliente", Storage="_Persona", ThisKey="idPersona", OtherKey="idPersona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._idPersona = value.idPersona;
					}
					else
					{
						this._idPersona = default(string);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Recoleccions(Recoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Recoleccions(Recoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colaboradores")]
	public partial class Colaboradore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idColaborador;
		
		private string _idPersona;
		
		private byte _idRoles;
		
		private string _nombreUsuario;
		
		private string _contrasena;
		
		private string _correo;
		
		private string _tel;
		
		private bool _estado;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<AreaCobertura> _AreaCoberturas;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Persona> _Persona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidColaboradorChanging(int value);
    partial void OnidColaboradorChanged();
    partial void OnidPersonaChanging(string value);
    partial void OnidPersonaChanged();
    partial void OnidRolesChanging(byte value);
    partial void OnidRolesChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    #endregion
		
		public Colaboradore()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._AreaCoberturas = new EntitySet<AreaCobertura>(new Action<AreaCobertura>(this.attach_AreaCoberturas), new Action<AreaCobertura>(this.detach_AreaCoberturas));
			this._Role = default(EntityRef<Role>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idColaborador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idColaborador
		{
			get
			{
				return this._idColaborador;
			}
			set
			{
				if ((this._idColaborador != value))
				{
					this.OnidColaboradorChanging(value);
					this.SendPropertyChanging();
					this._idColaborador = value;
					this.SendPropertyChanged("idColaborador");
					this.OnidColaboradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoles", DbType="TinyInt NOT NULL")]
		public byte idRoles
		{
			get
			{
				return this._idRoles;
			}
			set
			{
				if ((this._idRoles != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolesChanging(value);
					this.SendPropertyChanging();
					this._idRoles = value;
					this.SendPropertyChanged("idRoles");
					this.OnidRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradore_Agenda", Storage="_Agendas", ThisKey="idColaborador", OtherKey="idColaborador")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradore_AreaCobertura", Storage="_AreaCoberturas", ThisKey="idColaborador", OtherKey="idColaborador")]
		public EntitySet<AreaCobertura> AreaCoberturas
		{
			get
			{
				return this._AreaCoberturas;
			}
			set
			{
				this._AreaCoberturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Colaboradore", Storage="_Role", ThisKey="idRoles", OtherKey="idRoles", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Colaboradores.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Colaboradores.Add(this);
						this._idRoles = value.idRoles;
					}
					else
					{
						this._idRoles = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Colaboradore", Storage="_Persona", ThisKey="idPersona", OtherKey="idPersona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Colaboradores.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Colaboradores.Add(this);
						this._idPersona = value.idPersona;
					}
					else
					{
						this._idPersona = default(string);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Colaboradore = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Colaboradore = null;
		}
		
		private void attach_AreaCoberturas(AreaCobertura entity)
		{
			this.SendPropertyChanging();
			entity.Colaboradore = this;
		}
		
		private void detach_AreaCoberturas(AreaCobertura entity)
		{
			this.SendPropertyChanging();
			entity.Colaboradore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComercioAfiliado")]
	public partial class ComercioAfiliado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idComercioAfiliado;
		
		private byte _idRoles;
		
		private string _nombreComercio;
		
		private string _nombreUsuario;
		
		private string _contrasena;
		
		private string _telefono;
		
		private string _correo;
		
		private bool _estado;
		
		private EntitySet<DetalleCupon> _DetalleCupons;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComercioAfiliadoChanging(byte value);
    partial void OnidComercioAfiliadoChanged();
    partial void OnidRolesChanging(byte value);
    partial void OnidRolesChanged();
    partial void OnnombreComercioChanging(string value);
    partial void OnnombreComercioChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    #endregion
		
		public ComercioAfiliado()
		{
			this._DetalleCupons = new EntitySet<DetalleCupon>(new Action<DetalleCupon>(this.attach_DetalleCupons), new Action<DetalleCupon>(this.detach_DetalleCupons));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComercioAfiliado", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte idComercioAfiliado
		{
			get
			{
				return this._idComercioAfiliado;
			}
			set
			{
				if ((this._idComercioAfiliado != value))
				{
					this.OnidComercioAfiliadoChanging(value);
					this.SendPropertyChanging();
					this._idComercioAfiliado = value;
					this.SendPropertyChanged("idComercioAfiliado");
					this.OnidComercioAfiliadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoles", DbType="TinyInt NOT NULL")]
		public byte idRoles
		{
			get
			{
				return this._idRoles;
			}
			set
			{
				if ((this._idRoles != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolesChanging(value);
					this.SendPropertyChanging();
					this._idRoles = value;
					this.SendPropertyChanged("idRoles");
					this.OnidRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreComercio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreComercio
		{
			get
			{
				return this._nombreComercio;
			}
			set
			{
				if ((this._nombreComercio != value))
				{
					this.OnnombreComercioChanging(value);
					this.SendPropertyChanging();
					this._nombreComercio = value;
					this.SendPropertyChanged("nombreComercio");
					this.OnnombreComercioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComercioAfiliado_DetalleCupon", Storage="_DetalleCupons", ThisKey="idComercioAfiliado", OtherKey="idComercioAfiliado")]
		public EntitySet<DetalleCupon> DetalleCupons
		{
			get
			{
				return this._DetalleCupons;
			}
			set
			{
				this._DetalleCupons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_ComercioAfiliado", Storage="_Role", ThisKey="idRoles", OtherKey="idRoles", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.ComercioAfiliados.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.ComercioAfiliados.Add(this);
						this._idRoles = value.idRoles;
					}
					else
					{
						this._idRoles = default(byte);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleCupons(DetalleCupon entity)
		{
			this.SendPropertyChanging();
			entity.ComercioAfiliado = this;
		}
		
		private void detach_DetalleCupons(DetalleCupon entity)
		{
			this.SendPropertyChanging();
			entity.ComercioAfiliado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CuentasXcobrar")]
	public partial class CuentasXcobrar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCuentasXcobrar;
		
		private byte _idInventarioMaterial;
		
		private decimal _pesoEntregado;
		
		private int _monto;
		
		private System.DateTime _fecha;
		
		private EntityRef<InventarioMaterial> _InventarioMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCuentasXcobrarChanging(int value);
    partial void OnidCuentasXcobrarChanged();
    partial void OnidInventarioMaterialChanging(byte value);
    partial void OnidInventarioMaterialChanged();
    partial void OnpesoEntregadoChanging(decimal value);
    partial void OnpesoEntregadoChanged();
    partial void OnmontoChanging(int value);
    partial void OnmontoChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    #endregion
		
		public CuentasXcobrar()
		{
			this._InventarioMaterial = default(EntityRef<InventarioMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCuentasXcobrar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCuentasXcobrar
		{
			get
			{
				return this._idCuentasXcobrar;
			}
			set
			{
				if ((this._idCuentasXcobrar != value))
				{
					this.OnidCuentasXcobrarChanging(value);
					this.SendPropertyChanging();
					this._idCuentasXcobrar = value;
					this.SendPropertyChanged("idCuentasXcobrar");
					this.OnidCuentasXcobrarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInventarioMaterial", DbType="TinyInt NOT NULL")]
		public byte idInventarioMaterial
		{
			get
			{
				return this._idInventarioMaterial;
			}
			set
			{
				if ((this._idInventarioMaterial != value))
				{
					if (this._InventarioMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInventarioMaterialChanging(value);
					this.SendPropertyChanging();
					this._idInventarioMaterial = value;
					this.SendPropertyChanged("idInventarioMaterial");
					this.OnidInventarioMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pesoEntregado", DbType="Decimal(5,2) NOT NULL")]
		public decimal pesoEntregado
		{
			get
			{
				return this._pesoEntregado;
			}
			set
			{
				if ((this._pesoEntregado != value))
				{
					this.OnpesoEntregadoChanging(value);
					this.SendPropertyChanging();
					this._pesoEntregado = value;
					this.SendPropertyChanged("pesoEntregado");
					this.OnpesoEntregadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monto", DbType="Int NOT NULL")]
		public int monto
		{
			get
			{
				return this._monto;
			}
			set
			{
				if ((this._monto != value))
				{
					this.OnmontoChanging(value);
					this.SendPropertyChanging();
					this._monto = value;
					this.SendPropertyChanged("monto");
					this.OnmontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventarioMaterial_CuentasXcobrar", Storage="_InventarioMaterial", ThisKey="idInventarioMaterial", OtherKey="idInventarioMaterial", IsForeignKey=true)]
		public InventarioMaterial InventarioMaterial
		{
			get
			{
				return this._InventarioMaterial.Entity;
			}
			set
			{
				InventarioMaterial previousValue = this._InventarioMaterial.Entity;
				if (((previousValue != value) 
							|| (this._InventarioMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventarioMaterial.Entity = null;
						previousValue.CuentasXcobrars.Remove(this);
					}
					this._InventarioMaterial.Entity = value;
					if ((value != null))
					{
						value.CuentasXcobrars.Add(this);
						this._idInventarioMaterial = value.idInventarioMaterial;
					}
					else
					{
						this._idInventarioMaterial = default(byte);
					}
					this.SendPropertyChanged("InventarioMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cupones")]
	public partial class Cupone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCupones;
		
		private int _idDetalleCupon;
		
		private System.Nullable<int> _idCliente;
		
		private byte _idEstadosCupon;
		
		private string _codigoCupon;
		
		private System.Nullable<System.DateTime> _fechaIngreso;
		
		private System.Nullable<System.DateTime> _fechaVencimiento;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<DetalleCupon> _DetalleCupon;
		
		private EntityRef<EstadosCupon> _EstadosCupon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCuponesChanging(int value);
    partial void OnidCuponesChanged();
    partial void OnidDetalleCuponChanging(int value);
    partial void OnidDetalleCuponChanged();
    partial void OnidClienteChanging(System.Nullable<int> value);
    partial void OnidClienteChanged();
    partial void OnidEstadosCuponChanging(byte value);
    partial void OnidEstadosCuponChanged();
    partial void OncodigoCuponChanging(string value);
    partial void OncodigoCuponChanged();
    partial void OnfechaIngresoChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaIngresoChanged();
    partial void OnfechaVencimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaVencimientoChanged();
    #endregion
		
		public Cupone()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._DetalleCupon = default(EntityRef<DetalleCupon>);
			this._EstadosCupon = default(EntityRef<EstadosCupon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCupones", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCupones
		{
			get
			{
				return this._idCupones;
			}
			set
			{
				if ((this._idCupones != value))
				{
					this.OnidCuponesChanging(value);
					this.SendPropertyChanging();
					this._idCupones = value;
					this.SendPropertyChanged("idCupones");
					this.OnidCuponesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDetalleCupon", DbType="Int NOT NULL")]
		public int idDetalleCupon
		{
			get
			{
				return this._idDetalleCupon;
			}
			set
			{
				if ((this._idDetalleCupon != value))
				{
					if (this._DetalleCupon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDetalleCuponChanging(value);
					this.SendPropertyChanging();
					this._idDetalleCupon = value;
					this.SendPropertyChanged("idDetalleCupon");
					this.OnidDetalleCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCliente", DbType="Int")]
		public System.Nullable<int> idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstadosCupon", DbType="TinyInt NOT NULL")]
		public byte idEstadosCupon
		{
			get
			{
				return this._idEstadosCupon;
			}
			set
			{
				if ((this._idEstadosCupon != value))
				{
					if (this._EstadosCupon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadosCuponChanging(value);
					this.SendPropertyChanging();
					this._idEstadosCupon = value;
					this.SendPropertyChanged("idEstadosCupon");
					this.OnidEstadosCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoCupon", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string codigoCupon
		{
			get
			{
				return this._codigoCupon;
			}
			set
			{
				if ((this._codigoCupon != value))
				{
					this.OncodigoCuponChanging(value);
					this.SendPropertyChanging();
					this._codigoCupon = value;
					this.SendPropertyChanged("codigoCupon");
					this.OncodigoCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaIngreso", DbType="Date")]
		public System.Nullable<System.DateTime> fechaIngreso
		{
			get
			{
				return this._fechaIngreso;
			}
			set
			{
				if ((this._fechaIngreso != value))
				{
					this.OnfechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._fechaIngreso = value;
					this.SendPropertyChanged("fechaIngreso");
					this.OnfechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaVencimiento", DbType="Date")]
		public System.Nullable<System.DateTime> fechaVencimiento
		{
			get
			{
				return this._fechaVencimiento;
			}
			set
			{
				if ((this._fechaVencimiento != value))
				{
					this.OnfechaVencimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaVencimiento = value;
					this.SendPropertyChanged("fechaVencimiento");
					this.OnfechaVencimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Cupone", Storage="_Cliente", ThisKey="idCliente", OtherKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Cupones.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Cupones.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleCupon_Cupone", Storage="_DetalleCupon", ThisKey="idDetalleCupon", OtherKey="idDetalleCupon", IsForeignKey=true)]
		public DetalleCupon DetalleCupon
		{
			get
			{
				return this._DetalleCupon.Entity;
			}
			set
			{
				DetalleCupon previousValue = this._DetalleCupon.Entity;
				if (((previousValue != value) 
							|| (this._DetalleCupon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetalleCupon.Entity = null;
						previousValue.Cupones.Remove(this);
					}
					this._DetalleCupon.Entity = value;
					if ((value != null))
					{
						value.Cupones.Add(this);
						this._idDetalleCupon = value.idDetalleCupon;
					}
					else
					{
						this._idDetalleCupon = default(int);
					}
					this.SendPropertyChanged("DetalleCupon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosCupon_Cupone", Storage="_EstadosCupon", ThisKey="idEstadosCupon", OtherKey="idEstadosCupon", IsForeignKey=true)]
		public EstadosCupon EstadosCupon
		{
			get
			{
				return this._EstadosCupon.Entity;
			}
			set
			{
				EstadosCupon previousValue = this._EstadosCupon.Entity;
				if (((previousValue != value) 
							|| (this._EstadosCupon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosCupon.Entity = null;
						previousValue.Cupones.Remove(this);
					}
					this._EstadosCupon.Entity = value;
					if ((value != null))
					{
						value.Cupones.Add(this);
						this._idEstadosCupon = value.idEstadosCupon;
					}
					else
					{
						this._idEstadosCupon = default(byte);
					}
					this.SendPropertyChanged("EstadosCupon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleCupon")]
	public partial class DetalleCupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDetalleCupon;
		
		private byte _idComercioAfiliado;
		
		private string _DescCupon;
		
		private short _CantidadHojas;
		
		private string _imagen;
		
		private EntitySet<Cupone> _Cupones;
		
		private EntityRef<ComercioAfiliado> _ComercioAfiliado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDetalleCuponChanging(int value);
    partial void OnidDetalleCuponChanged();
    partial void OnidComercioAfiliadoChanging(byte value);
    partial void OnidComercioAfiliadoChanged();
    partial void OnDescCuponChanging(string value);
    partial void OnDescCuponChanged();
    partial void OnCantidadHojasChanging(short value);
    partial void OnCantidadHojasChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    #endregion
		
		public DetalleCupon()
		{
			this._Cupones = new EntitySet<Cupone>(new Action<Cupone>(this.attach_Cupones), new Action<Cupone>(this.detach_Cupones));
			this._ComercioAfiliado = default(EntityRef<ComercioAfiliado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDetalleCupon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDetalleCupon
		{
			get
			{
				return this._idDetalleCupon;
			}
			set
			{
				if ((this._idDetalleCupon != value))
				{
					this.OnidDetalleCuponChanging(value);
					this.SendPropertyChanging();
					this._idDetalleCupon = value;
					this.SendPropertyChanged("idDetalleCupon");
					this.OnidDetalleCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComercioAfiliado", DbType="TinyInt NOT NULL")]
		public byte idComercioAfiliado
		{
			get
			{
				return this._idComercioAfiliado;
			}
			set
			{
				if ((this._idComercioAfiliado != value))
				{
					if (this._ComercioAfiliado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComercioAfiliadoChanging(value);
					this.SendPropertyChanging();
					this._idComercioAfiliado = value;
					this.SendPropertyChanged("idComercioAfiliado");
					this.OnidComercioAfiliadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescCupon", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DescCupon
		{
			get
			{
				return this._DescCupon;
			}
			set
			{
				if ((this._DescCupon != value))
				{
					this.OnDescCuponChanging(value);
					this.SendPropertyChanging();
					this._DescCupon = value;
					this.SendPropertyChanged("DescCupon");
					this.OnDescCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantidadHojas", DbType="SmallInt NOT NULL")]
		public short CantidadHojas
		{
			get
			{
				return this._CantidadHojas;
			}
			set
			{
				if ((this._CantidadHojas != value))
				{
					this.OnCantidadHojasChanging(value);
					this.SendPropertyChanging();
					this._CantidadHojas = value;
					this.SendPropertyChanged("CantidadHojas");
					this.OnCantidadHojasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetalleCupon_Cupone", Storage="_Cupones", ThisKey="idDetalleCupon", OtherKey="idDetalleCupon")]
		public EntitySet<Cupone> Cupones
		{
			get
			{
				return this._Cupones;
			}
			set
			{
				this._Cupones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComercioAfiliado_DetalleCupon", Storage="_ComercioAfiliado", ThisKey="idComercioAfiliado", OtherKey="idComercioAfiliado", IsForeignKey=true)]
		public ComercioAfiliado ComercioAfiliado
		{
			get
			{
				return this._ComercioAfiliado.Entity;
			}
			set
			{
				ComercioAfiliado previousValue = this._ComercioAfiliado.Entity;
				if (((previousValue != value) 
							|| (this._ComercioAfiliado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComercioAfiliado.Entity = null;
						previousValue.DetalleCupons.Remove(this);
					}
					this._ComercioAfiliado.Entity = value;
					if ((value != null))
					{
						value.DetalleCupons.Add(this);
						this._idComercioAfiliado = value.idComercioAfiliado;
					}
					else
					{
						this._idComercioAfiliado = default(byte);
					}
					this.SendPropertyChanged("ComercioAfiliado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.DetalleCupon = this;
		}
		
		private void detach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.DetalleCupon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direcciones")]
	public partial class Direccione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDireccion;
		
		private byte _idDistrito;
		
		private string _nombreDireccion;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<DireccionXrecoleccion> _DireccionXrecoleccions;
		
		private EntityRef<Distrito> _Distrito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnidDistritoChanging(byte value);
    partial void OnidDistritoChanged();
    partial void OnnombreDireccionChanging(string value);
    partial void OnnombreDireccionChanged();
    #endregion
		
		public Direccione()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._DireccionXrecoleccions = new EntitySet<DireccionXrecoleccion>(new Action<DireccionXrecoleccion>(this.attach_DireccionXrecoleccions), new Action<DireccionXrecoleccion>(this.detach_DireccionXrecoleccions));
			this._Distrito = default(EntityRef<Distrito>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDistrito", DbType="TinyInt NOT NULL")]
		public byte idDistrito
		{
			get
			{
				return this._idDistrito;
			}
			set
			{
				if ((this._idDistrito != value))
				{
					if (this._Distrito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDistritoChanging(value);
					this.SendPropertyChanging();
					this._idDistrito = value;
					this.SendPropertyChanged("idDistrito");
					this.OnidDistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreDireccion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string nombreDireccion
		{
			get
			{
				return this._nombreDireccion;
			}
			set
			{
				if ((this._nombreDireccion != value))
				{
					this.OnnombreDireccionChanging(value);
					this.SendPropertyChanging();
					this._nombreDireccion = value;
					this.SendPropertyChanged("nombreDireccion");
					this.OnnombreDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direccione_Cliente", Storage="_Clientes", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direccione_DireccionXrecoleccion", Storage="_DireccionXrecoleccions", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<DireccionXrecoleccion> DireccionXrecoleccions
		{
			get
			{
				return this._DireccionXrecoleccions;
			}
			set
			{
				this._DireccionXrecoleccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distrito_Direccione", Storage="_Distrito", ThisKey="idDistrito", OtherKey="idDistrito", IsForeignKey=true)]
		public Distrito Distrito
		{
			get
			{
				return this._Distrito.Entity;
			}
			set
			{
				Distrito previousValue = this._Distrito.Entity;
				if (((previousValue != value) 
							|| (this._Distrito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Distrito.Entity = null;
						previousValue.Direcciones.Remove(this);
					}
					this._Distrito.Entity = value;
					if ((value != null))
					{
						value.Direcciones.Add(this);
						this._idDistrito = value.idDistrito;
					}
					else
					{
						this._idDistrito = default(byte);
					}
					this.SendPropertyChanged("Distrito");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Direccione = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Direccione = null;
		}
		
		private void attach_DireccionXrecoleccions(DireccionXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Direccione = this;
		}
		
		private void detach_DireccionXrecoleccions(DireccionXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Direccione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DireccionXrecoleccion")]
	public partial class DireccionXrecoleccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDireccionXrecoleccion;
		
		private int _idRecoleccion;
		
		private int _idDireccion;
		
		private EntityRef<Direccione> _Direccione;
		
		private EntityRef<Recoleccion> _Recoleccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDireccionXrecoleccionChanging(int value);
    partial void OnidDireccionXrecoleccionChanged();
    partial void OnidRecoleccionChanging(int value);
    partial void OnidRecoleccionChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    #endregion
		
		public DireccionXrecoleccion()
		{
			this._Direccione = default(EntityRef<Direccione>);
			this._Recoleccion = default(EntityRef<Recoleccion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccionXrecoleccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDireccionXrecoleccion
		{
			get
			{
				return this._idDireccionXrecoleccion;
			}
			set
			{
				if ((this._idDireccionXrecoleccion != value))
				{
					this.OnidDireccionXrecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccionXrecoleccion = value;
					this.SendPropertyChanged("idDireccionXrecoleccion");
					this.OnidDireccionXrecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecoleccion", DbType="Int NOT NULL")]
		public int idRecoleccion
		{
			get
			{
				return this._idRecoleccion;
			}
			set
			{
				if ((this._idRecoleccion != value))
				{
					if (this._Recoleccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idRecoleccion = value;
					this.SendPropertyChanged("idRecoleccion");
					this.OnidRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direccione_DireccionXrecoleccion", Storage="_Direccione", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccione Direccione
		{
			get
			{
				return this._Direccione.Entity;
			}
			set
			{
				Direccione previousValue = this._Direccione.Entity;
				if (((previousValue != value) 
							|| (this._Direccione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccione.Entity = null;
						previousValue.DireccionXrecoleccions.Remove(this);
					}
					this._Direccione.Entity = value;
					if ((value != null))
					{
						value.DireccionXrecoleccions.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_DireccionXrecoleccion", Storage="_Recoleccion", ThisKey="idRecoleccion", OtherKey="idRecoleccion", IsForeignKey=true)]
		public Recoleccion Recoleccion
		{
			get
			{
				return this._Recoleccion.Entity;
			}
			set
			{
				Recoleccion previousValue = this._Recoleccion.Entity;
				if (((previousValue != value) 
							|| (this._Recoleccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recoleccion.Entity = null;
						previousValue.DireccionXrecoleccions.Remove(this);
					}
					this._Recoleccion.Entity = value;
					if ((value != null))
					{
						value.DireccionXrecoleccions.Add(this);
						this._idRecoleccion = value.idRecoleccion;
					}
					else
					{
						this._idRecoleccion = default(int);
					}
					this.SendPropertyChanged("Recoleccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distrito")]
	public partial class Distrito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idDistrito;
		
		private byte _idCanton;
		
		private string _nombreDistrito;
		
		private EntitySet<Direccione> _Direcciones;
		
		private EntityRef<Canton> _Canton;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDistritoChanging(byte value);
    partial void OnidDistritoChanged();
    partial void OnidCantonChanging(byte value);
    partial void OnidCantonChanged();
    partial void OnnombreDistritoChanging(string value);
    partial void OnnombreDistritoChanged();
    #endregion
		
		public Distrito()
		{
			this._Direcciones = new EntitySet<Direccione>(new Action<Direccione>(this.attach_Direcciones), new Action<Direccione>(this.detach_Direcciones));
			this._Canton = default(EntityRef<Canton>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDistrito", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idDistrito
		{
			get
			{
				return this._idDistrito;
			}
			set
			{
				if ((this._idDistrito != value))
				{
					this.OnidDistritoChanging(value);
					this.SendPropertyChanging();
					this._idDistrito = value;
					this.SendPropertyChanged("idDistrito");
					this.OnidDistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCanton", DbType="TinyInt NOT NULL")]
		public byte idCanton
		{
			get
			{
				return this._idCanton;
			}
			set
			{
				if ((this._idCanton != value))
				{
					if (this._Canton.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCantonChanging(value);
					this.SendPropertyChanging();
					this._idCanton = value;
					this.SendPropertyChanged("idCanton");
					this.OnidCantonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreDistrito", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreDistrito
		{
			get
			{
				return this._nombreDistrito;
			}
			set
			{
				if ((this._nombreDistrito != value))
				{
					this.OnnombreDistritoChanging(value);
					this.SendPropertyChanging();
					this._nombreDistrito = value;
					this.SendPropertyChanged("nombreDistrito");
					this.OnnombreDistritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Distrito_Direccione", Storage="_Direcciones", ThisKey="idDistrito", OtherKey="idDistrito")]
		public EntitySet<Direccione> Direcciones
		{
			get
			{
				return this._Direcciones;
			}
			set
			{
				this._Direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Canton_Distrito", Storage="_Canton", ThisKey="idCanton", OtherKey="idCanton", IsForeignKey=true)]
		public Canton Canton
		{
			get
			{
				return this._Canton.Entity;
			}
			set
			{
				Canton previousValue = this._Canton.Entity;
				if (((previousValue != value) 
							|| (this._Canton.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Canton.Entity = null;
						previousValue.Distritos.Remove(this);
					}
					this._Canton.Entity = value;
					if ((value != null))
					{
						value.Distritos.Add(this);
						this._idCanton = value.idCanton;
					}
					else
					{
						this._idCanton = default(byte);
					}
					this.SendPropertyChanged("Canton");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direcciones(Direccione entity)
		{
			this.SendPropertyChanging();
			entity.Distrito = this;
		}
		
		private void detach_Direcciones(Direccione entity)
		{
			this.SendPropertyChanging();
			entity.Distrito = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadosCupon")]
	public partial class EstadosCupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idEstadosCupon;
		
		private string _Descripcion;
		
		private EntitySet<Cupone> _Cupones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadosCuponChanging(byte value);
    partial void OnidEstadosCuponChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public EstadosCupon()
		{
			this._Cupones = new EntitySet<Cupone>(new Action<Cupone>(this.attach_Cupones), new Action<Cupone>(this.detach_Cupones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstadosCupon", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idEstadosCupon
		{
			get
			{
				return this._idEstadosCupon;
			}
			set
			{
				if ((this._idEstadosCupon != value))
				{
					this.OnidEstadosCuponChanging(value);
					this.SendPropertyChanging();
					this._idEstadosCupon = value;
					this.SendPropertyChanged("idEstadosCupon");
					this.OnidEstadosCuponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosCupon_Cupone", Storage="_Cupones", ThisKey="idEstadosCupon", OtherKey="idEstadosCupon")]
		public EntitySet<Cupone> Cupones
		{
			get
			{
				return this._Cupones;
			}
			set
			{
				this._Cupones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.EstadosCupon = this;
		}
		
		private void detach_Cupones(Cupone entity)
		{
			this.SendPropertyChanging();
			entity.EstadosCupon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadosRecoleccion")]
	public partial class EstadosRecoleccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idEstadosRecoleccion;
		
		private string _NombreEstado;
		
		private EntitySet<Recoleccion> _Recoleccions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadosRecoleccionChanging(byte value);
    partial void OnidEstadosRecoleccionChanged();
    partial void OnNombreEstadoChanging(string value);
    partial void OnNombreEstadoChanged();
    #endregion
		
		public EstadosRecoleccion()
		{
			this._Recoleccions = new EntitySet<Recoleccion>(new Action<Recoleccion>(this.attach_Recoleccions), new Action<Recoleccion>(this.detach_Recoleccions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstadosRecoleccion", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idEstadosRecoleccion
		{
			get
			{
				return this._idEstadosRecoleccion;
			}
			set
			{
				if ((this._idEstadosRecoleccion != value))
				{
					this.OnidEstadosRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idEstadosRecoleccion = value;
					this.SendPropertyChanged("idEstadosRecoleccion");
					this.OnidEstadosRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEstado", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NombreEstado
		{
			get
			{
				return this._NombreEstado;
			}
			set
			{
				if ((this._NombreEstado != value))
				{
					this.OnNombreEstadoChanging(value);
					this.SendPropertyChanging();
					this._NombreEstado = value;
					this.SendPropertyChanged("NombreEstado");
					this.OnNombreEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosRecoleccion_Recoleccion", Storage="_Recoleccions", ThisKey="idEstadosRecoleccion", OtherKey="idEstadosRecoleccion")]
		public EntitySet<Recoleccion> Recoleccions
		{
			get
			{
				return this._Recoleccions;
			}
			set
			{
				this._Recoleccions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recoleccions(Recoleccion entity)
		{
			this.SendPropertyChanging();
			entity.EstadosRecoleccion = this;
		}
		
		private void detach_Recoleccions(Recoleccion entity)
		{
			this.SendPropertyChanging();
			entity.EstadosRecoleccion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventarioMaterial")]
	public partial class InventarioMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idInventarioMaterial;
		
		private byte _idMaterial;
		
		private decimal _peso;
		
		private EntitySet<CuentasXcobrar> _CuentasXcobrars;
		
		private EntityRef<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInventarioMaterialChanging(byte value);
    partial void OnidInventarioMaterialChanged();
    partial void OnidMaterialChanging(byte value);
    partial void OnidMaterialChanged();
    partial void OnpesoChanging(decimal value);
    partial void OnpesoChanged();
    #endregion
		
		public InventarioMaterial()
		{
			this._CuentasXcobrars = new EntitySet<CuentasXcobrar>(new Action<CuentasXcobrar>(this.attach_CuentasXcobrars), new Action<CuentasXcobrar>(this.detach_CuentasXcobrars));
			this._Material = default(EntityRef<Material>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInventarioMaterial", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idInventarioMaterial
		{
			get
			{
				return this._idInventarioMaterial;
			}
			set
			{
				if ((this._idInventarioMaterial != value))
				{
					this.OnidInventarioMaterialChanging(value);
					this.SendPropertyChanging();
					this._idInventarioMaterial = value;
					this.SendPropertyChanged("idInventarioMaterial");
					this.OnidInventarioMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaterial", DbType="TinyInt NOT NULL")]
		public byte idMaterial
		{
			get
			{
				return this._idMaterial;
			}
			set
			{
				if ((this._idMaterial != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaterialChanging(value);
					this.SendPropertyChanging();
					this._idMaterial = value;
					this.SendPropertyChanged("idMaterial");
					this.OnidMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="Decimal(5,2) NOT NULL")]
		public decimal peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventarioMaterial_CuentasXcobrar", Storage="_CuentasXcobrars", ThisKey="idInventarioMaterial", OtherKey="idInventarioMaterial")]
		public EntitySet<CuentasXcobrar> CuentasXcobrars
		{
			get
			{
				return this._CuentasXcobrars;
			}
			set
			{
				this._CuentasXcobrars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_InventarioMaterial", Storage="_Material", ThisKey="idMaterial", OtherKey="idMaterial", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.InventarioMaterials.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.InventarioMaterials.Add(this);
						this._idMaterial = value.idMaterial;
					}
					else
					{
						this._idMaterial = default(byte);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CuentasXcobrars(CuentasXcobrar entity)
		{
			this.SendPropertyChanging();
			entity.InventarioMaterial = this;
		}
		
		private void detach_CuentasXcobrars(CuentasXcobrar entity)
		{
			this.SendPropertyChanging();
			entity.InventarioMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idMaterial;
		
		private string _descripcionMaterial;
		
		private EntitySet<InventarioMaterial> _InventarioMaterials;
		
		private EntitySet<MaterialesXrecoleccion> _MaterialesXrecoleccions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMaterialChanging(byte value);
    partial void OnidMaterialChanged();
    partial void OndescripcionMaterialChanging(string value);
    partial void OndescripcionMaterialChanged();
    #endregion
		
		public Material()
		{
			this._InventarioMaterials = new EntitySet<InventarioMaterial>(new Action<InventarioMaterial>(this.attach_InventarioMaterials), new Action<InventarioMaterial>(this.detach_InventarioMaterials));
			this._MaterialesXrecoleccions = new EntitySet<MaterialesXrecoleccion>(new Action<MaterialesXrecoleccion>(this.attach_MaterialesXrecoleccions), new Action<MaterialesXrecoleccion>(this.detach_MaterialesXrecoleccions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaterial", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idMaterial
		{
			get
			{
				return this._idMaterial;
			}
			set
			{
				if ((this._idMaterial != value))
				{
					this.OnidMaterialChanging(value);
					this.SendPropertyChanging();
					this._idMaterial = value;
					this.SendPropertyChanged("idMaterial");
					this.OnidMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcionMaterial", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcionMaterial
		{
			get
			{
				return this._descripcionMaterial;
			}
			set
			{
				if ((this._descripcionMaterial != value))
				{
					this.OndescripcionMaterialChanging(value);
					this.SendPropertyChanging();
					this._descripcionMaterial = value;
					this.SendPropertyChanged("descripcionMaterial");
					this.OndescripcionMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_InventarioMaterial", Storage="_InventarioMaterials", ThisKey="idMaterial", OtherKey="idMaterial")]
		public EntitySet<InventarioMaterial> InventarioMaterials
		{
			get
			{
				return this._InventarioMaterials;
			}
			set
			{
				this._InventarioMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialesXrecoleccion", Storage="_MaterialesXrecoleccions", ThisKey="idMaterial", OtherKey="idMaterial")]
		public EntitySet<MaterialesXrecoleccion> MaterialesXrecoleccions
		{
			get
			{
				return this._MaterialesXrecoleccions;
			}
			set
			{
				this._MaterialesXrecoleccions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventarioMaterials(InventarioMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_InventarioMaterials(InventarioMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
		
		private void attach_MaterialesXrecoleccions(MaterialesXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_MaterialesXrecoleccions(MaterialesXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialesXrecoleccion")]
	public partial class MaterialesXrecoleccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMaterialesXrecoleccion;
		
		private int _idRecoleccion;
		
		private byte _idMaterial;
		
		private decimal _pesoRecoleccion;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<Recoleccion> _Recoleccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMaterialesXrecoleccionChanging(int value);
    partial void OnidMaterialesXrecoleccionChanged();
    partial void OnidRecoleccionChanging(int value);
    partial void OnidRecoleccionChanged();
    partial void OnidMaterialChanging(byte value);
    partial void OnidMaterialChanged();
    partial void OnpesoRecoleccionChanging(decimal value);
    partial void OnpesoRecoleccionChanged();
    #endregion
		
		public MaterialesXrecoleccion()
		{
			this._Material = default(EntityRef<Material>);
			this._Recoleccion = default(EntityRef<Recoleccion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaterialesXrecoleccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMaterialesXrecoleccion
		{
			get
			{
				return this._idMaterialesXrecoleccion;
			}
			set
			{
				if ((this._idMaterialesXrecoleccion != value))
				{
					this.OnidMaterialesXrecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idMaterialesXrecoleccion = value;
					this.SendPropertyChanged("idMaterialesXrecoleccion");
					this.OnidMaterialesXrecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecoleccion", DbType="Int NOT NULL")]
		public int idRecoleccion
		{
			get
			{
				return this._idRecoleccion;
			}
			set
			{
				if ((this._idRecoleccion != value))
				{
					if (this._Recoleccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idRecoleccion = value;
					this.SendPropertyChanged("idRecoleccion");
					this.OnidRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaterial", DbType="TinyInt NOT NULL")]
		public byte idMaterial
		{
			get
			{
				return this._idMaterial;
			}
			set
			{
				if ((this._idMaterial != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaterialChanging(value);
					this.SendPropertyChanging();
					this._idMaterial = value;
					this.SendPropertyChanged("idMaterial");
					this.OnidMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pesoRecoleccion", DbType="Decimal(5,2) NOT NULL")]
		public decimal pesoRecoleccion
		{
			get
			{
				return this._pesoRecoleccion;
			}
			set
			{
				if ((this._pesoRecoleccion != value))
				{
					this.OnpesoRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._pesoRecoleccion = value;
					this.SendPropertyChanged("pesoRecoleccion");
					this.OnpesoRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialesXrecoleccion", Storage="_Material", ThisKey="idMaterial", OtherKey="idMaterial", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.MaterialesXrecoleccions.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.MaterialesXrecoleccions.Add(this);
						this._idMaterial = value.idMaterial;
					}
					else
					{
						this._idMaterial = default(byte);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_MaterialesXrecoleccion", Storage="_Recoleccion", ThisKey="idRecoleccion", OtherKey="idRecoleccion", IsForeignKey=true)]
		public Recoleccion Recoleccion
		{
			get
			{
				return this._Recoleccion.Entity;
			}
			set
			{
				Recoleccion previousValue = this._Recoleccion.Entity;
				if (((previousValue != value) 
							|| (this._Recoleccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recoleccion.Entity = null;
						previousValue.MaterialesXrecoleccions.Remove(this);
					}
					this._Recoleccion.Entity = value;
					if ((value != null))
					{
						value.MaterialesXrecoleccions.Add(this);
						this._idRecoleccion = value.idRecoleccion;
					}
					else
					{
						this._idRecoleccion = default(int);
					}
					this.SendPropertyChanged("Recoleccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPersona;
		
		private string _nombre;
		
		private string _apellidos;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Colaboradore> _Colaboradores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonaChanging(string value);
    partial void OnidPersonaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidosChanging(string value);
    partial void OnapellidosChanged();
    #endregion
		
		public Persona()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Colaboradores = new EntitySet<Colaboradore>(new Action<Colaboradore>(this.attach_Colaboradores), new Action<Colaboradore>(this.detach_Colaboradores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersona", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPersona
		{
			get
			{
				return this._idPersona;
			}
			set
			{
				if ((this._idPersona != value))
				{
					this.OnidPersonaChanging(value);
					this.SendPropertyChanging();
					this._idPersona = value;
					this.SendPropertyChanged("idPersona");
					this.OnidPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidos", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string apellidos
		{
			get
			{
				return this._apellidos;
			}
			set
			{
				if ((this._apellidos != value))
				{
					this.OnapellidosChanging(value);
					this.SendPropertyChanging();
					this._apellidos = value;
					this.SendPropertyChanged("apellidos");
					this.OnapellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cliente", Storage="_Clientes", ThisKey="idPersona", OtherKey="idPersona")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Colaboradore", Storage="_Colaboradores", ThisKey="idPersona", OtherKey="idPersona")]
		public EntitySet<Colaboradore> Colaboradores
		{
			get
			{
				return this._Colaboradores;
			}
			set
			{
				this._Colaboradores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Colaboradores(Colaboradore entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Colaboradores(Colaboradore entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincia")]
	public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _idProvincia;
		
		private string _nombreProvincia;
		
		private EntitySet<AreaCobertura> _AreaCoberturas;
		
		private EntitySet<Canton> _Cantons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProvinciaChanging(byte value);
    partial void OnidProvinciaChanged();
    partial void OnnombreProvinciaChanging(string value);
    partial void OnnombreProvinciaChanged();
    #endregion
		
		public Provincia()
		{
			this._AreaCoberturas = new EntitySet<AreaCobertura>(new Action<AreaCobertura>(this.attach_AreaCoberturas), new Action<AreaCobertura>(this.detach_AreaCoberturas));
			this._Cantons = new EntitySet<Canton>(new Action<Canton>(this.attach_Cantons), new Action<Canton>(this.detach_Cantons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreProvincia", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string nombreProvincia
		{
			get
			{
				return this._nombreProvincia;
			}
			set
			{
				if ((this._nombreProvincia != value))
				{
					this.OnnombreProvinciaChanging(value);
					this.SendPropertyChanging();
					this._nombreProvincia = value;
					this.SendPropertyChanged("nombreProvincia");
					this.OnnombreProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_AreaCobertura", Storage="_AreaCoberturas", ThisKey="idProvincia", OtherKey="idProvincia")]
		public EntitySet<AreaCobertura> AreaCoberturas
		{
			get
			{
				return this._AreaCoberturas;
			}
			set
			{
				this._AreaCoberturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Canton", Storage="_Cantons", ThisKey="idProvincia", OtherKey="idProvincia")]
		public EntitySet<Canton> Cantons
		{
			get
			{
				return this._Cantons;
			}
			set
			{
				this._Cantons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AreaCoberturas(AreaCobertura entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_AreaCoberturas(AreaCobertura entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
		
		private void attach_Cantons(Canton entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Cantons(Canton entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recoleccion")]
	public partial class Recoleccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRecoleccion;
		
		private int _idCliente;
		
		private byte _idEstadosRecoleccion;
		
		private int _totalHojas;
		
		private System.DateTime _fechaRecoleccion;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<DireccionXrecoleccion> _DireccionXrecoleccions;
		
		private EntitySet<MaterialesXrecoleccion> _MaterialesXrecoleccions;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<EstadosRecoleccion> _EstadosRecoleccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRecoleccionChanging(int value);
    partial void OnidRecoleccionChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnidEstadosRecoleccionChanging(byte value);
    partial void OnidEstadosRecoleccionChanged();
    partial void OntotalHojasChanging(int value);
    partial void OntotalHojasChanged();
    partial void OnfechaRecoleccionChanging(System.DateTime value);
    partial void OnfechaRecoleccionChanged();
    #endregion
		
		public Recoleccion()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._DireccionXrecoleccions = new EntitySet<DireccionXrecoleccion>(new Action<DireccionXrecoleccion>(this.attach_DireccionXrecoleccions), new Action<DireccionXrecoleccion>(this.detach_DireccionXrecoleccions));
			this._MaterialesXrecoleccions = new EntitySet<MaterialesXrecoleccion>(new Action<MaterialesXrecoleccion>(this.attach_MaterialesXrecoleccions), new Action<MaterialesXrecoleccion>(this.detach_MaterialesXrecoleccions));
			this._Cliente = default(EntityRef<Cliente>);
			this._EstadosRecoleccion = default(EntityRef<EstadosRecoleccion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRecoleccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRecoleccion
		{
			get
			{
				return this._idRecoleccion;
			}
			set
			{
				if ((this._idRecoleccion != value))
				{
					this.OnidRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idRecoleccion = value;
					this.SendPropertyChanged("idRecoleccion");
					this.OnidRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCliente", DbType="Int NOT NULL")]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstadosRecoleccion", DbType="TinyInt NOT NULL")]
		public byte idEstadosRecoleccion
		{
			get
			{
				return this._idEstadosRecoleccion;
			}
			set
			{
				if ((this._idEstadosRecoleccion != value))
				{
					if (this._EstadosRecoleccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadosRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._idEstadosRecoleccion = value;
					this.SendPropertyChanged("idEstadosRecoleccion");
					this.OnidEstadosRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHojas", DbType="Int NOT NULL")]
		public int totalHojas
		{
			get
			{
				return this._totalHojas;
			}
			set
			{
				if ((this._totalHojas != value))
				{
					this.OntotalHojasChanging(value);
					this.SendPropertyChanging();
					this._totalHojas = value;
					this.SendPropertyChanged("totalHojas");
					this.OntotalHojasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaRecoleccion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaRecoleccion
		{
			get
			{
				return this._fechaRecoleccion;
			}
			set
			{
				if ((this._fechaRecoleccion != value))
				{
					this.OnfechaRecoleccionChanging(value);
					this.SendPropertyChanging();
					this._fechaRecoleccion = value;
					this.SendPropertyChanged("fechaRecoleccion");
					this.OnfechaRecoleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_Agenda", Storage="_Agendas", ThisKey="idRecoleccion", OtherKey="idRecoleccion")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_DireccionXrecoleccion", Storage="_DireccionXrecoleccions", ThisKey="idRecoleccion", OtherKey="idRecoleccion")]
		public EntitySet<DireccionXrecoleccion> DireccionXrecoleccions
		{
			get
			{
				return this._DireccionXrecoleccions;
			}
			set
			{
				this._DireccionXrecoleccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recoleccion_MaterialesXrecoleccion", Storage="_MaterialesXrecoleccions", ThisKey="idRecoleccion", OtherKey="idRecoleccion")]
		public EntitySet<MaterialesXrecoleccion> MaterialesXrecoleccions
		{
			get
			{
				return this._MaterialesXrecoleccions;
			}
			set
			{
				this._MaterialesXrecoleccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Recoleccion", Storage="_Cliente", ThisKey="idCliente", OtherKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Recoleccions.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Recoleccions.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosRecoleccion_Recoleccion", Storage="_EstadosRecoleccion", ThisKey="idEstadosRecoleccion", OtherKey="idEstadosRecoleccion", IsForeignKey=true)]
		public EstadosRecoleccion EstadosRecoleccion
		{
			get
			{
				return this._EstadosRecoleccion.Entity;
			}
			set
			{
				EstadosRecoleccion previousValue = this._EstadosRecoleccion.Entity;
				if (((previousValue != value) 
							|| (this._EstadosRecoleccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosRecoleccion.Entity = null;
						previousValue.Recoleccions.Remove(this);
					}
					this._EstadosRecoleccion.Entity = value;
					if ((value != null))
					{
						value.Recoleccions.Add(this);
						this._idEstadosRecoleccion = value.idEstadosRecoleccion;
					}
					else
					{
						this._idEstadosRecoleccion = default(byte);
					}
					this.SendPropertyChanged("EstadosRecoleccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = null;
		}
		
		private void attach_DireccionXrecoleccions(DireccionXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = this;
		}
		
		private void detach_DireccionXrecoleccions(DireccionXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = null;
		}
		
		private void attach_MaterialesXrecoleccions(MaterialesXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = this;
		}
		
		private void detach_MaterialesXrecoleccions(MaterialesXrecoleccion entity)
		{
			this.SendPropertyChanging();
			entity.Recoleccion = null;
		}
	}
}
#pragma warning restore 1591
